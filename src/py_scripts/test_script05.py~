#!/home/3/bhattaca/bin/python
#test script5 this is the latest version 

import cmd_line
import create_command
import subprocess
import chart_data
import def_param as df

reload (cmd_line)
reload (chart_data)
reload (create_command)

cl=cmd_line
cc=create_command
#parse the commmandline arguments
args=cl.parse_command_line()
print 'args',args


for files in args.input_files:
    #for each isovalue
    for iso in args.isovalue:
      #for each positon type
      for pos in args.position:
         cmd=['./isodual3D']
         if args.max_eigen!=None:
          cmd.append('-max_eigen')
          cmd.append(args.max_eigen)
         if args.max_dist!=None:
          cmd.append('-max_dist')
          cmd.append(args.max_dist)
         if args.reposition== True:
          cmd.append('-reposition')
         if args.lindstrom == True:
          cmd.append('-lindstrom')
         if args.allow_conflict ==True:
          cmd.append('-allow_conflict')
         if args.clamp_conflict == True:
          cmd.append('-clamp_conflict')
         if args.clamp_far ==True:
          cmd.append('-clamp_far')
         if args.recompute_eigen2==True:
          cmd.append('-recompute_eigen2')
         if args.cgradient==True:
          cmd.append('-gradient')
          cgrad_file=files.split('.')
          cgrad_file.insert(len(cgrad_file)-1,'cgrad')
          cmd.append('.'.join(cgrad_file))
         cmd.append('-trimesh')
         cmd.append('-s')
         cmd.append('-position')
         cmd.append(pos)
         cmd.append(iso)
         print 'data ', df.data_loc+files
         cmd.append(df.data_loc+files)
         print 'cmd',cmd        
         
